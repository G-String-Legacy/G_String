<title>Background</title>
<para>G_String_VI is the latest link in an evolutionary chain that started around 2007 at McMaster. Initially it was conceived as an in-house data entry aid to assist in applying the stringent formal constraints when composing a control file for urGenova, the statistical tool for estimating variance components in unbalanced random effects G study designs. The program urGenova was developed by Robert Brennan, an authority on Generalization theory in the early 2000’s.</para>
<para>As G_String evolved, it gradually took on the character of a tutor, leading practitioners through the steps of performing G Studies, i.e. analyzing the reliability of specific performance or competence assessment instruments. G_String_VI still has Robert Brennan’s urGenova at its core.</para>
<para>Whereas urGenova was written in ANSI C, a code easily transported across a variety of operating system platforms, earlier versions of G_String were written in a higher programming language – C#. This essentially confined the use of G_String to the Windows platform.</para>
<para>As G_String became more popular, users started to request a platform independent version that could operate on Mac and Linux platforms, as well as on Windows. The project for transplanting G_String from C# to Java began in March of 2018 and was completed in June of the year. In the process, we also incorporated insights gained over the previous ten years.</para>
<para>Since version G_String_V it is now an autonomous tool that runs under Windows, Linux and Macs. It automatically installs the appropriate version of urGenova code on the host machine, formats the control and data files, feeds them to urGenova, and finally helps the user in interpreting the results that urGenova returns.</para>
<para>Version G_String_VI sports a new, additional feature: it allows instructors to generate synthetic data files for desired designs to be used for instructional purposes.</para>
<para>The program name 'G_String' sometimes causes raised eyebrows. But there is nothing prurient about it. The capital 'G' stands for Generalization Theory. A 'String' in computer lingo is a serialized text, that is a linear sequence of characters carrying information. In our case, the characters are those characterizing facets within the context of the testing design. G_String does its work by performing a lexical analysis on these strings.</para>